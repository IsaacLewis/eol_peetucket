- subtitle = content_item.subtitle_to_show
%div{:id => "text_wrapper_#{content_item.id}", :class => (@preview ? nil : "text_object"), :style => (@hide ? "display:none" : nil)}
  %div{:class => "content-article #{vetted_id_class(content_item)}", :id => "text_#{content_item.id}"}
    
    - if !content_item.user.nil? && content_item.user.id == current_user.id
      .multi_new_text_error{:style => "display:none;"}
        Only one text object can be edited at a time.
      .edit_text
        = link_to("Edit", {:controller => :data_objects, :action => :edit, :type => :text, :id => content_item.id, :taxon_concept_id => @taxon_concept.id, :toc_id => @category_id}, :id => "edit_text_#{content_item.id}")
      - if subtitle.blank? || (subtitle == category && hide_subtitle)
        %h1 &nbsp;
    
    - unless subtitle.blank? || (subtitle == category && hide_subtitle)
      %h1
        = hh(subtitle)
    / ATTRIBUTION GOES HERE
    .content-attribution-area
      .attribution-header.text-area-header
        = "Source and Additional Information"[]
      = render :partial => 'data_objects/attribution', :locals => { :data_object => content_item }
    %br
    %div{:class => (content_item.vetted_id != Vetted.trusted.id ? "unvetted-background-text" : nil)}
      = content_item.description.sanitize_html
    -# -- REFERENCES --
    - unless content_item['refs'].nil?
      .references
        .text-area-header.references-header
          References
        %ul
          - content_item['refs'].each do |ref|
            %li
              = allow_some_html ref.full_reference.sanitize_html
              - ref.ref_identifiers.each do |identifier|
                -# we do not show identifier unless we know how to handle them:
                - next unless identifier.display?
                &emsp;
                = external_link_to(identifier.identifier, identifier.link_to_identifier)
  .text_buttons{ :id => "text_buttons_#{content_item.id}" }
    #left_text_buttons_group
      %ul{"data-data_object_id" => content_item.id}
        = render :partial=>'/taxa/data_object_states', :locals => {:dato => content_item}
    / RATING
    .text-rating
      = render :partial => '/taxa/star_rating', :locals => {:data_object => content_item}
    #right_text_buttons_group
      - if @taxon_concept.show_curator_controls?
        - if !content_item.curated?
          .spinner
            = image_tag('indicator_arrows_black.gif', :style => 'display:none;')
          #hide_these_controls_too_for_now{:style => "display:none"}
            #right_text_button.trust_button.thumbs-up-image{:title => "Trust this text"}
              = link_to '<span class="span_block"></span>', | 
                {:controller => :data_objects, :action => :curate, |
                  :id => content_item.id, '_method' => :put, |
                  :curator_activity_id => CuratorActivity.approve!.id.to_s}, |
                {'data-data_object_id' => content_item.id, |
                'data-data_object_type' => DataType.text_type_ids[0], |
                :alt => 'Trust this text'} |
            #right_text_button.untrust_button.thumbs-down-image{ :title => "Do not trust this text" }
              = link_to '<span class="span_block"></span>', |
                {:controller => :data_objects, :action => :curate, |
                :id => content_item.id, '_method' => :put, |
                :curator_activity_id => CuratorActivity.disapprove!.id.to_s}, |
                {'data-data_object_id' => content_item.id, |
                :alt => 'Do not trust this text', |
                'data-data_object_type' => DataType.text_type_ids[0]} |
        #right_text_button.curate_button.curate-button-image{ :title => "Curate this text" }
          = link_to '<span class="span_block"></span>', |
            curation_data_object_path(content_item), |
            {'data-data_object_id' => content_item.id, |
            :style => comments_style, :class => 'slide-in-link', |
            :alt => 'Curate this text'} |
      - if !@preview
        #right_text_button.comment_button.comment-button-image{ :title => "Comment on this text" }
          - if(@selected_text_comment)
            :javascript
              text_comments_permalink(#{content_item.id}, #{@selected_text_comment.id}, #{@comment_page});
          - else
            = link_to '<span class="span_block"></span>', |
              data_object_comments_path(content_item), |
              {'data-data_object_id' => content_item.id, |
              :style => comments_style, :alt => "Comment on this text", |
              :class => 'slide-in-link'} |

  .text-slidebox-border{:id => "text-comments-wrapper-#{content_item.id}", :style => "display:none;"}
    .text-slidebox-container.text-comment-div{:id => "text-comments-#{content_item.id}"}
      -# TODO - we re-use this indicator a lot.  Put it in a CSS class.
      %p
        = image_tag 'indicator_arrows_black.gif'
        Retrieving comments, please wait...
  
  .text-slidebox-border{:id => "text-curation-wrapper-#{content_item.id}", :style => "display:none;"}
    .text-slidebox-container{:id => "text-curation-#{content_item.id}"}
      %p
        = image_tag 'indicator_arrows_black.gif'
        Loading curation controls, please wait...
  .divider
